/*
* ==================================================================================
* File:             CPartCatalogServiceGroup.java
* Software Package: CPartCatalogServiceGroup
*
* DO NOT EDIT this file. It was generated and will be overwritten at next generation
*
* ==================================================================================
*/

package ifs.application.cpartcatalogservicegroup;

import java.util.Date;
import java.rmi.*;
import javax.ejb.*;
import ifs.fnd.record.*;
import ifs.fnd.record.serialization.*;
import ifs.fnd.remote.*;
import ifs.fnd.remote.j2ee.*;
import ifs.fnd.sf.j2ee.*;
import ifs.fnd.sf.j2ee.meta.*;
import ifs.fnd.base.*;
import ifs.fnd.sf.*;

public class CPartCatalogServiceGroupBean extends FndSessionBean {
   private static final String[] operations  = {
                                   "cPartCatalogService_CCreatePartCatalog"
                                   };
   private CPartCatalogService cPartCatalogService_Implementation;

   public void ejbCreate()  throws CreateException {
      interfaceName = "CPartCatalogServiceGroup";
      isActivity = true;
      try {
         cPartCatalogService_Implementation = CPartCatalogServiceFactory.getHandler();
      }
      catch(IfsException e) {
         throw new CreateException(e.toString());
      }
   }
   public String[] getOperations() {
      return operations;
   }

   public FndArrayResultWrapper cPartCatalogService_CCreatePartCatalog(CPartCatalogRequestArray inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_ARRAY_RETURN_ARRAY
      try {
         beforeCall(inRecord, "CPartCatalogService_CCreatePartCatalog", ctx);
         CPartCatalogResponseArray result = cPartCatalogService_Implementation.cCreatePartCatalog(inRecord);
         afterCall(result);
         return new FndArrayResultWrapper(result, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cPartCatalogService_CCreatePartCatalog(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_ARRAY_RETURN_ARRAY
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        CPartCatalogRequestArray inRecord = new CPartCatalogRequestArray();
        FndRecordFormat.parseArray(inBody, inRecord,FndRecordFormat.REQUEST);
        CPartCatalogResponseArray outRecord = (CPartCatalogResponseArray)cPartCatalogService_CCreatePartCatalog(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatArray(outRecord, FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public static void initMetaCache() {
      FndBeanMeta bean;
      FndHandlerMeta handler;
      FndOperationMeta operation;
      FndValidationMeta validation;
      FndParameterMeta param, returnParam;

      bean = new FndBeanMeta("CPartCatalogServiceGroup");

      handler = new FndHandlerMeta(bean, "CPartCatalogService", FndHandlerMeta.Type.SERVICE, null, "OTHER", "UNSUPPORTED", null, null);

      returnParam = new FndParameterMeta(FndParameterMeta.Type.VIEW, CPartCatalogResponse.viewMeta, true, false);
      operation = new FndOperationMeta(handler, "CCreatePartCatalog", returnParam, "C_CREATE_PART_CATALOG", FndOperationMeta.BizApiType.INBOUND_REQUEST);
      param = new FndParameterMeta(operation, "PartCatalogRequest", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, CPartCatalogRequest.viewMeta, true, false);
   }

}