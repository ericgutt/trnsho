/*
* ==================================================================================
* File:             ShopOrdArray.java
* Software Package: CShopOrderServicesGroup
*
* DO NOT EDIT this file. It was generated and will be overwritten at next generation
*
* ==================================================================================
*/

package ifs.application.cshoporderservicesgroup;

import ifs.fnd.record.*;
import ifs.fnd.record.serialization.*;
import ifs.fnd.base.*;

/** 
 * Array of <code>ShopOrd</code>.
 */
public class ShopOrdArray extends FndAbstractArray {

   public ShopOrdArray() {
      super();
   }

   public ShopOrdArray(FndAttributeMeta meta) {
      super(meta);
   }

   public ShopOrdArray(FndAttributeMeta meta, FndCompoundReference parentKeyInParent) {
      super(meta, parentKeyInParent);
   }

   public boolean add(ShopOrd record) {
      return internalAdd(record);
   }

   public void add(int index, ShopOrd record) {
      internalAdd(index, record);
   }

   public void add(ShopOrdArray array) {
      internalAdd(array);
   }

   public void assign(ShopOrdArray from) throws SystemException {
      assign(from, true);
   }

   public boolean contains(ShopOrd record) {
      return internalContains(record);
   }

   public boolean equals(ShopOrd record) {
      return internalEquals(record);
   }

   public ShopOrd firstElement() {
      return (ShopOrd)internalFirstElement();
   }

   public ShopOrd get(int index) {
      return (ShopOrd)internalGet(index);
   }

   public int indexOf(ShopOrd record) {
      return internalIndexOf(record);
   }

   public ShopOrd lastElement() {
      return (ShopOrd)internalLastElement();
   }

   public int lastIndexOf(ShopOrd record) {
      return internalLastIndexOf(record);
   }

   public ShopOrd remove(int index) {
      return (ShopOrd)internalRemove(index);
   }

   public ShopOrd set(int index, ShopOrd record) {
      return (ShopOrd)internalSet(index, record);
   }

   public FndAbstractRecord newRecord() {
      return new ShopOrd();
   }

   protected FndAbstractRecord newRecord(FndTokenReader stream) throws ParseException {
      ShopOrd record = new ShopOrd();
      record.parse(stream);
      return record;
   } 

   protected FndAttribute newAttribute(FndAttributeMeta meta) {
       return new ShopOrdArray(meta);
   }
}
