/*
* ==================================================================================
* File:             CShopOrderServicesGroup.java
* Software Package: CShopOrderServicesGroup
*
* DO NOT EDIT this file. It was generated and will be overwritten at next generation
*
* ==================================================================================
*/

package ifs.application.cshoporderservicesgroup;

import java.util.Date;
import java.rmi.*;
import javax.ejb.*;
import ifs.fnd.record.*;
import ifs.fnd.record.serialization.*;
import ifs.fnd.remote.*;
import ifs.fnd.remote.j2ee.*;
import ifs.fnd.sf.j2ee.*;
import ifs.fnd.sf.j2ee.meta.*;
import ifs.fnd.base.*;
import ifs.fnd.sf.*;

public class CShopOrderServicesGroupBean extends FndSessionBean {
   private static final String[] operations  = {
                                   "cShopOrderServices_CChangePrStatus",
                                   "cShopOrderServices_CGetShopOrderRequest",
                                   "cShopOrderServices_CQueryShopOrderRequest",
                                   "cShopOrderServices_CReceiveShopOrder",
                                   "cShopOrderServices_CSendShopOrder"
                                   };
   private CShopOrderServices cShopOrderServices_Implementation;

   public void ejbCreate()  throws CreateException {
      interfaceName = "CShopOrderServicesGroup";
      isActivity = true;
      try {
         cShopOrderServices_Implementation = CShopOrderServicesFactory.getHandler();
      }
      catch(IfsException e) {
         throw new CreateException(e.toString());
      }
   }
   public String[] getOperations() {
      return operations;
   }

   public FndRecordResultWrapper cShopOrderServices_CChangePrStatus(ChangePrStatusInput inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      try {
         beforeCall(inRecord, "CShopOrderServices_CChangePrStatus", ctx);
         ChangePrStatusReturnMessage result = cShopOrderServices_Implementation.cChangePrStatus(inRecord);
         afterCall(result);
         return new FndRecordResultWrapper(result, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cShopOrderServices_CChangePrStatus(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        ChangePrStatusInput inRecord = new ChangePrStatusInput();
        FndRecordFormat.parseRecord(inBody, inRecord, FndRecordFormat.REQUEST);
        ChangePrStatusReturnMessage outRecord = (ChangePrStatusReturnMessage)cShopOrderServices_CChangePrStatus(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatRecord(outRecord, FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public FndRecordResultWrapper cShopOrderServices_CGetShopOrderRequest(ShopOrd inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      try {
         beforeCall(inRecord, "CShopOrderServices_CGetShopOrderRequest", ctx);
         ShopOrd result = cShopOrderServices_Implementation.cGetShopOrderRequest(inRecord);
         afterCall(result);
         return new FndRecordResultWrapper(result, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cShopOrderServices_CGetShopOrderRequest(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        ShopOrd inRecord = new ShopOrd();
        FndRecordFormat.parseRecord(inBody, inRecord, FndRecordFormat.REQUEST);
        ShopOrd outRecord = (ShopOrd)cShopOrderServices_CGetShopOrderRequest(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatRecord(outRecord, FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public FndRecordResultWrapper cShopOrderServices_CQueryShopOrderRequest(ShopOrd inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      try {
         beforeCall(inRecord, "CShopOrderServices_CQueryShopOrderRequest", ctx);
         ShopOrd result = cShopOrderServices_Implementation.cQueryShopOrderRequest(inRecord);
         afterCall(result);
         return new FndRecordResultWrapper(result, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cShopOrderServices_CQueryShopOrderRequest(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        ShopOrd inRecord = new ShopOrd();
        FndRecordFormat.parseRecord(inBody, inRecord, FndRecordFormat.REQUEST);
        ShopOrd outRecord = (ShopOrd)cShopOrderServices_CQueryShopOrderRequest(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatRecord(outRecord, FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public FndRecordResultWrapper cShopOrderServices_CReceiveShopOrder(ShopOrd inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_VIEW
      try {
         beforeCall(inRecord, "CShopOrderServices_CReceiveShopOrder", ctx);
         cShopOrderServices_Implementation.cReceiveShopOrder(inRecord);
         afterCall((FndAbstractRecord)null);
         return new FndRecordResultWrapper((FndAbstractRecord)null, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cShopOrderServices_CReceiveShopOrder(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_VIEW
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        ShopOrd inRecord = new ShopOrd();
        FndRecordFormat.parseRecord(inBody, inRecord, FndRecordFormat.REQUEST);
        cShopOrderServices_CReceiveShopOrder(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatVoid(FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public FndRecordResultWrapper cShopOrderServices_CSendShopOrder(ShopOrd inRecord, FndContext ctx) throws IfsException {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      try {
         beforeCall(inRecord, "CShopOrderServices_CSendShopOrder", ctx);
         ShopOrd result = cShopOrderServices_Implementation.cSendShopOrder(inRecord);
         afterCall(result);
         return new FndRecordResultWrapper(result, FndContext.getCurrentContext());
      }
      catch (IfsException e) {
         rollback();
         throw e;
      }
   }

   public FndInvocationResult cShopOrderServices_CSendShopOrder(FndSkeletonParameter fndSecurity, byte[] inHeader, byte[] inBody) {
      // Marshal protocol: IN_VIEW_RETURN_VIEW
      FndInvocationResult result = new FndInvocationResult();
      try {
        initContext(fndSecurity, inHeader);
        FndSkeletonParameter outBody = new FndSkeletonParameter();
        ShopOrd inRecord = new ShopOrd();
        FndRecordFormat.parseRecord(inBody, inRecord, FndRecordFormat.REQUEST);
        ShopOrd outRecord = (ShopOrd)cShopOrderServices_CSendShopOrder(inRecord, FndContext.getCurrentContext()).getResult();
        outBody.value = FndRecordFormat.formatRecord(outRecord, FndRecordFormat.RESPONSE);
        result.setOutBody(outBody);
      }
      catch (IfsException e) {
         abort(result, inBody, e);
      }
      formatResponse(result);
      return result;
   }

   public static void initMetaCache() {
      FndBeanMeta bean;
      FndHandlerMeta handler;
      FndOperationMeta operation;
      FndValidationMeta validation;
      FndParameterMeta param, returnParam;

      bean = new FndBeanMeta("CShopOrderServicesGroup");

      handler = new FndHandlerMeta(bean, "CShopOrderServices", FndHandlerMeta.Type.SERVICE, null, "OTHER", "UNSUPPORTED", null, null);

      returnParam = new FndParameterMeta(FndParameterMeta.Type.VIEW, ChangePrStatusReturnMessage.viewMeta, false, false);
      operation = new FndOperationMeta(handler, "CChangePrStatus", returnParam, "C_CHANGE_PR_STATUS", FndOperationMeta.BizApiType.INBOUND_REQUEST);
      param = new FndParameterMeta(operation, "ChangePrStatusInput", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, ChangePrStatusInput.viewMeta, false, false);

      returnParam = new FndParameterMeta(FndParameterMeta.Type.VIEW, ShopOrd.viewMeta, false, false);
      operation = new FndOperationMeta(handler, "CGetShopOrderRequest", returnParam, "C_GET_SHOP_ORDER_REQUEST", FndOperationMeta.BizApiType.INBOUND_REQUEST);
      param = new FndParameterMeta(operation, "ShopOrd", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, ShopOrd.viewMeta, false, false);

      returnParam = new FndParameterMeta(FndParameterMeta.Type.VIEW, ShopOrd.viewMeta, false, false);
      operation = new FndOperationMeta(handler, "CQueryShopOrderRequest", returnParam, "C_QUERY_SHOP_ORDER_REQUEST", FndOperationMeta.BizApiType.OUTBOUND_REQUEST);
      param = new FndParameterMeta(operation, "ShopOrd", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, ShopOrd.viewMeta, false, false);

      operation = new FndOperationMeta(handler, "CReceiveShopOrder", null, "C_RECEIVE_SHOP_ORDER", FndOperationMeta.BizApiType.INBOUND);
      param = new FndParameterMeta(operation, "ShopOrd", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, ShopOrd.viewMeta, false, false);

      returnParam = new FndParameterMeta(FndParameterMeta.Type.VIEW, ShopOrd.viewMeta, false, false);
      operation = new FndOperationMeta(handler, "CSendShopOrder", returnParam, "C_SEND_SHOP_ORDER", FndOperationMeta.BizApiType.OUTBOUND);
      param = new FndParameterMeta(operation, "ShopOrd", FndParameterMeta.Type.VIEW, FndParameterMeta.Direction.IN, ShopOrd.viewMeta, false, false);
   }

}